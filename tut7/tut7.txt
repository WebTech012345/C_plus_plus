Scope resolution operator(::) in C++ :-

if you alredy have a same value in global scope and local scope then you can use scope resolution operator(::) to access global scope value.

Example:-
#include<iostream>
using namespace std;
int x=10;
int main()
{
    int x=20;
    cout<<::x<<endl;
    return 0;
}

Output:-
10

Static variable in C++ :-

Static variable is a variable that is declared with the static keyword. It has a scope of the entire program and retains its value between function calls. It is initialized only once, at the start of the program, and its value is preserved until the end of the program.

* (if want to pass it into a function)So the crucial concept which I am talking about is that in C++ language, double is the default type given to a  decimal literal (34.4 is double by default and not float), so to use it as float, you have to specify it like "34.4F," as shown in figure 3. To display the size of float, double, and long double literals, we have used a "sizeof" operator. The output of this program is shown in figure 4.

example:-
#include<iostream>
using namespace std;

int main(){
      float  d= 34.4;
    long double e = 34.4 ;

    34.4f


    cout <<"The value of d is "<<endl<<d<<"The value of e is "<<e<<endl;

    return 0;
}


In this C++ tutorial, we will discuss the reference variables and typecasting. In our last lesson, we discussed the header files and operators in C++. These are the topics which we are going to cover in this tutorial:

Built-in Data Types
Float, Double and Long Double Literals
Reference Variables
Typecasting
Built-in Data Types
As discussed in our previous lectures, built-in data types are pre-defined by the language and can be used directly. An example program for built-in data types is shown in figure 1.























#include<iostream> 

using namespace std;

int c = 45;

int main(){
    
    // *************Build in Data types****************
    // int a, b, c;
    // cout<<"Enter the value of a:"<<endl;
    // cin>>a;
    // cout<<"Enter the value of b:"<<endl;
    // cin>>b;
    // c = a + b;
    // cout<<"The sum is "<<c<<endl;
    // cout<<"The global c is "<<::c;

    // ************* Float, double and long double Literals****************
    // float d=34.4F;
    // long double e = 34.4L; 
    // cout<<"The size of 34.4 is "<<sizeof(34.4)<<endl;
    // cout<<"The size of 34.4f is "<<sizeof(34.4f)<<endl;
    // cout<<"The size of 34.4F is "<<sizeof(34.4F)<<endl;
    // cout<<"The size of 34.4l is "<<sizeof(34.4l)<<endl;
    // cout<<"The size of 34.4L is "<<sizeof(34.4L)<<endl;
    // cout<<"The value of d is "<<d<<endl<<"The value of e is "<<e;  

    // *************Reference Variables**************** 
    // Rohan Das----> Monty -----> Rohu ------> Dangerous Coder
    // float x = 455;
    // float & y = x;
    // cout<<x<<endl;
    // cout<<y<<endl;

    // *************Typecasting**************** 
    int a = 45;   
    float b = 45.46;
    cout<<"The value of a is "<<(float)a<<endl;
    cout<<"The value of a is "<<float(a)<<endl;

    cout<<"The value of b is "<<(int)b<<endl;
    cout<<"The value of b is "<<int(b)<<endl;
    int c = int(b);

    cout<<"The expression is "<<a + b<<endl;
    cout<<"The expression is "<<a + int(b)<<endl;
    cout<<"The expression is "<<a + (int)b<<endl;


    return 0;
}
